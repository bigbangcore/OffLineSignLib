plugins {
    id 'java'
    id 'maven'
}

group = 'com.bigbang'
version = '1.0.0'
sourceCompatibility = '1.8'

repositories {
    mavenLocal()
    maven { url 'https://maven.aliyun.com/repository/public' }
    mavenCentral()
}

dependencies {
  compile group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.8.1'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.1'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.10.1'
  compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.10.1'
  compileOnly group: 'org.slf4j', name: 'slf4j-api', version: '1.7.29'
  testCompile group: 'junit', name: 'junit', version: '4.12'
}

uploadArchives {

    System.out.println("deployer --->" + project.name)

    repositories {
        mavenDeployer {
            repository(url: "file://" + System.properties['user.home'] + "/.m2/repository")
            pom.project {
                artifactId project.name
                version project.rootProject.version
            }
        }
        // ./gradlew -Dmu="admin" -Dmp="password" uploadArchives
        def u = System.properties.getProperty("mu")
        def p = System.properties.getProperty("mp")

        if (u != null && p != null && !u.isEmpty() && !p.isEmpty()) {

            System.out.println("deploy user: " + u)

            mavenDeployer {
                pom.project {
                    artifactId project.name
                    version project.rootProject.version
                }

                snapshotRepository(url: "http://nexus.xstar.io:8081/nexus/repository/maven-snapshots/") {
                    authentication(userName: u, password: p)
                }

                repository(url: "http://nexus.xstar.io:8081/nexus/repository/maven-releases/") {
                    authentication(userName: u, password: p)
                }
            }
        }
    }
}